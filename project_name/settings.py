"""
Django settings for {{project_name}} project.

Generated by 'django-admin startproject' using Django 4.2

For more information on this file, see
https://docs.djangoproject.com/zh-hans/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/zh-hans/4.2/ref/settings/
"""

import os
import sys
import pymysql

from pathlib import Path

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.append(os.path.join(BASE_DIR / 'packages'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/zh-hans/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    '{{project_name}}',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '{{project_name}}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = '{{project_name}}.wsgi.application'


# Database
# https://docs.djangoproject.com/zh-hans/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/zh-hans/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/zh-hans/4.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/zh-hans/4.2/howto/static-files/

MEDIA_URL   = 'media/'
STATIC_URL  = 'static/'
MEDIA_ROOT  = BASE_DIR / 'local/media'
STATIC_ROOT = BASE_DIR / 'local/static'


# Default primary key field type
# https://docs.djangoproject.com/zh-hans/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email
# https://docs.djangoproject.com/zh-hans/4.2/ref/settings/#email

EMAIL_PORT = 587  # 465/587
EMAIL_HOST = 'smtp.dj.com'
SERVER_EMAIL = '{{project_name}}@dj.com'
EMAIL_SUBJECT_PREFIX = '[{{project_name}}] '
EMAIL_HOST_USER = '{{project_name}}@dj.com'
EMAIL_HOST_PASSWORD = ''
DEFAULT_FROM_EMAIL = '{{project_name}}@dj.com'

ADMINS = [
    ('{{project_name}}', '{{project_name}}@dj.com'),
]


# Logging
# https://docs.djangoproject.com/zh-hans/5.0/topics/logging/

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'loggers': {
        '{{project_name}}': {
            'level': 'INFO',
            'handlers': ['console', 'email_admins']
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler'
        },
        'email_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'formatters': {
        'default': {
            'style': '{',
            'format': '[{asctime} {levelname}] {message}'
        }
    }
}


# Celery
# https://docs.celeryq.dev/en/stable/userguide/configuration.html

CELERY = {
    'timezone': TIME_ZONE,
    'include': INSTALLED_APPS,
    'broker_url': 'redis://localhost:6379/0',
    'broker_connection_retry_on_startup': True,
    'result_backend': 'redis://localhost:6379/0',
    'beat_schedule': {},
}
